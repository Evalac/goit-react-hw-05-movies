{"version":3,"file":"static/js/108.f9ebbbf3.chunk.js","mappings":"qPACA,GAAgB,WAAa,oCAAoC,mBAAqB,4CAA4C,oBAAsB,8C,SC0CxJ,MAzCA,SAAwBA,GAKpB,IAADC,EAJDC,EAAYF,EAAZE,aACAC,EAAgBH,EAAhBG,iBACAC,EAASJ,EAATI,UACAC,EAAeL,EAAfK,gBAcA,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAAA,WAAgBC,SAdlB,SAAAC,GACjBA,EAAEC,iBACgC,KAA9BZ,EAAaa,IAAI,UACnBC,MAAM,2BAERb,IACGc,MAAK,SAAAC,GACJd,EAAUc,EACZ,IACCC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAM,GACtC,EAI0DZ,SAAA,EACpDF,EAAAA,EAAAA,KAAA,SAAOiB,QAAQ,QAAQb,UAAWC,EAAAA,mBAAuBH,UACvDF,EAAAA,EAAAA,KAAA,SACEI,UAAWC,EAAAA,mBACXa,MAAgC,QAA3BvB,EAAEC,EAAaa,IAAI,gBAAQ,IAAAd,EAAAA,EAAI,GACpCwB,SAAU,SAAAZ,GACRR,EAAgB,CAAEqB,MAAOb,EAAEc,OAAOH,OACpC,EACAI,KAAK,OACLC,KAAK,QACLC,GAAG,aAGPxB,EAAAA,EAAAA,KAAA,UAAQI,UAAWC,EAAAA,oBAAyBiB,KAAK,SAAQpB,SAAC,eAMlE,E,SCxCA,GAAgB,YAAc,8BAA8B,iBAAmB,mCAAmC,qBAAuB,uCAAuC,qBAAuB,uCAAuC,+BAAiC,kDCmC/Q,MA/BA,SAAwBR,GAAwB,IAArB+B,EAAQ/B,EAAR+B,SAAUC,EAAMhC,EAANgC,OACnC,OACE1B,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAII,UAAWC,EAAAA,YAAgBH,SAC5BwB,EAAOC,QAAQC,KAAI,SAAAhB,GAAK,OACvBZ,EAAAA,EAAAA,KAAA,MAAmBI,UAAWC,EAAAA,iBAAqBH,UACjDC,EAAAA,EAAAA,MAAC0B,EAAAA,GAAI,CACHzB,UAAWC,EAAAA,qBACXyB,GAAE,GAAAC,OAAKnB,EAAMY,IACbQ,MAAO,CAAEC,KAAMR,GAAWvB,SAAA,EAE1BF,EAAAA,EAAAA,KAAA,OACEI,UAAWC,EAAAA,qBACX6B,IACEtB,EAAMuB,YAAW,kCAAAJ,OACqBnB,EAAMuB,aACxCC,EAENC,IAAI,SAENrC,EAAAA,EAAAA,KAAA,OAAKI,UAAWC,EAAAA,+BAAmCH,UACjDF,EAAAA,EAAAA,KAAA,KAAGI,UAAWC,EAAAA,2BAA+BH,SAAEU,EAAM0B,cAhBlD1B,EAAMY,GAmBV,OAKf,ECQA,MAlCA,WAAmB,IAAD7B,EAChB4C,GAA4BC,EAAAA,EAAAA,UAAS,CAAEb,QAAS,KAAKc,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9Cb,EAAMe,EAAA,GAAE3C,EAAS2C,EAAA,GACxBE,GAAwCC,EAAAA,EAAAA,IAAgB,IAAGC,GAAAH,EAAAA,EAAAA,GAAAC,EAAA,GAApD/C,EAAYiD,EAAA,GAAE9C,EAAe8C,EAAA,GAC9BC,EAAsC,QAA5BnD,EAAGC,EAAaa,IAAI,gBAAQ,IAAAd,EAAAA,EAAI,GAE1C8B,GAAWsB,EAAAA,EAAAA,MAEc,SAAAC,IAY9B,OAZ8BA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAA/B,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEkD,OAFlDF,EAAAC,KAAA,EAEIxC,QAAQC,IAAI,yKAAkCsC,EAAAE,KAAA,EACvBC,MAAM,GAAD1B,OACvB2B,EAAAA,EAAQ,wBAAA3B,OAAuBe,GAClCa,EAAAA,GACA,KAAD,EAHa,OAARP,EAAQE,EAAAM,KAAAN,EAAAE,KAAA,EAIKJ,EAASS,OAAO,KAAD,EAAxB,OAAJR,EAAIC,EAAAM,KAAAN,EAAAQ,OAAA,SACHT,GAAI,cAAAC,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAEL,IAAIU,MAAM,8GAAyB,KAAD,oBAAAV,EAAAW,OAAA,GAAAd,EAAA,oBAE3Ce,MAAA,KAAAC,UAAA,CAED,OACEhE,EAAAA,EAAAA,MAAAF,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACoE,EAAe,CACdxE,aAAcA,EACdC,iBApByB,WAEA,OAAAmD,EAAAkB,MAAC,KAADC,UAAA,EAmBzBrE,UAAWA,EACXC,gBAAiBA,KAEnBC,EAAAA,EAAAA,KAACqE,EAAe,CAAC5C,SAAUA,EAAUC,OAAQA,MAGnD,C,6ECxCA,IAAMgC,EAAW,+BAIXC,EAAU,CACdW,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cANF,0P","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieSearch/SearchMovieForm/SearchMovieForm.module.css?b5b0","components/MovieSearch/SearchMovieForm/SearchMovieForm.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieSearch/SearchMovieList/MoveList.module.css?4bcf","components/MovieSearch/SearchMovieList/SearchMovieList.jsx","pages/Movies.jsx","services/OptionsAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form_query\":\"SearchMovieForm_form_query__OFPqi\",\"search_query_input\":\"SearchMovieForm_search_query_input__-dz79\",\"search_query_button\":\"SearchMovieForm_search_query_button__GxPTe\"};","import css from './SearchMovieForm.module.css';\n\nfunction SearchMovieForm({\n  searchParams,\n  fetchSearchMovie,\n  setMovies,\n  setSearchParams,\n}) {\n  const submitForm = e => {\n    e.preventDefault();\n    if (searchParams.get('query') === '') {\n      alert('Please enter movie name');\n    }\n    fetchSearchMovie()\n      .then(movie => {\n        setMovies(movie);\n      })\n      .catch(error => console.log(error));\n  };\n\n  return (\n    <>\n      <form className={css.form_query} onSubmit={submitForm}>\n        <label htmlFor=\"query\" className={css.search_query_label}>\n          <input\n            className={css.search_query_input}\n            value={searchParams.get('query') ?? ''}\n            onChange={e => {\n              setSearchParams({ query: e.target.value });\n            }}\n            type=\"text\"\n            name=\"query\"\n            id=\"query\"\n          />\n        </label>\n        <button className={css.search_query_button} type=\"submit\">\n          Search\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default SearchMovieForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"movies_list\":\"MoveList_movies_list__9V12V\",\"movies_list_item\":\"MoveList_movies_list_item__h2BB2\",\"movie_list_item_link\":\"MoveList_movie_list_item_link__fVZ1F\",\"movies_list_item_img\":\"MoveList_movies_list_item_img__ZspJp\",\"movie_list_item_link_container\":\"MoveList_movie_list_item_link_container__H-2K1\"};","import { Link } from 'react-router-dom';\n\nimport noImage from '../../../img/depositphotos_134263580-stock-photo-man-holding-card-with-question.jpg';\nimport css from './MoveList.module.css';\n\nfunction SearchMovieList({ location, movies }) {\n  return (\n    <main>\n      <ul className={css.movies_list}>\n        {movies.results.map(movie => (\n          <li key={movie.id} className={css.movies_list_item}>\n            <Link\n              className={css.movie_list_item_link}\n              to={`${movie.id}`}\n              state={{ from: location }}\n            >\n              <img\n                className={css.movies_list_item_img}\n                src={\n                  movie.poster_path\n                    ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                    : noImage\n                }\n                alt=\"pic\"\n              />\n              <div className={css.movie_list_item_link_container}>\n                <p className={css.movie_list_item_link_title}>{movie.title}</p>\n              </div>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </main>\n  );\n}\n\nexport default SearchMovieList;\n","import { useState } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\n\nimport { options, BASE_URL } from 'services/OptionsAPI';\n\nimport SearchMovieForm from 'components/MovieSearch/SearchMovieForm/SearchMovieForm';\nimport SearchMovieList from 'components/MovieSearch/SearchMovieList/SearchMovieList';\n\nfunction Movies() {\n  const [movies, setMovies] = useState({ results: [] });\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const queryValue = searchParams.get('query') ?? '';\n\n  const location = useLocation();\n\n  async function fetchSearchMovie() {\n    try {\n      console.log(`Виконується фетч пошуку фільму`);\n      const responce = await fetch(\n        `${BASE_URL}/search/movie?query=${queryValue}`,\n        options\n      );\n      const data = await responce.json();\n      return data;\n    } catch (error) {\n      throw new Error('Упс щось пішло не так');\n    }\n  }\n\n  return (\n    <>\n      <SearchMovieForm\n        searchParams={searchParams}\n        fetchSearchMovie={fetchSearchMovie}\n        setMovies={setMovies}\n        setSearchParams={setSearchParams}\n      />\n      <SearchMovieList location={location} movies={movies} />\n    </>\n  );\n}\n\nexport default Movies;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkOWNhMTczNzkwZWQ5NzdkZGM3ZDgzYTA0NmQ3ZTIwMiIsIm5iZiI6MTczOTEyMTk4OS44NTIsInN1YiI6IjY3YThlNTQ1MDhkZmY5MDMxOGYxMTkwZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.K59AU-jgWUYBFO064D_SN_0Dl_uXHhDAAsm48CRTA0c';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: API_KEY,\n  },\n};\n\nexport { BASE_URL, options };\n"],"names":["_ref","_searchParams$get","searchParams","fetchSearchMovie","setMovies","setSearchParams","_jsx","_Fragment","children","_jsxs","className","css","onSubmit","e","preventDefault","get","alert","then","movie","catch","error","console","log","htmlFor","value","onChange","query","target","type","name","id","location","movies","results","map","Link","to","concat","state","from","src","poster_path","noImage","alt","title","_useState","useState","_useState2","_slicedToArray","_useSearchParams","useSearchParams","_useSearchParams2","queryValue","useLocation","_fetchSearchMovie","_asyncToGenerator","_regeneratorRuntime","_callee","responce","data","_context","prev","next","fetch","BASE_URL","options","sent","json","abrupt","t0","Error","stop","apply","arguments","SearchMovieForm","SearchMovieList","method","headers","accept","Authorization"],"sourceRoot":""}