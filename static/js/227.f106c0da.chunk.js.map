{"version":3,"file":"static/js/227.f106c0da.chunk.js","mappings":"mJAIA,IAJA,SAAsBA,GAAa,IAAVC,EAAKD,EAALC,MACvB,OAAOC,EAAAA,EAAAA,KAAA,KAAAC,SAAIF,EAAMG,SACnB,C,mCCEA,IAJA,SAAgBC,GACd,OAAOH,EAAAA,EAAAA,KAAA,KAAAC,SAAG,8GACZ,C,iKCaA,MAfA,SAAmBH,GAAkB,IAAfM,EAAUN,EAAVM,WACpB,OACEJ,EAAAA,EAAAA,KAAA,WAAAC,UACED,EAAAA,EAAAA,KAAA,MAAAC,SACGG,EAAWC,QAAQC,KAAI,SAACC,EAAQC,GAAK,OACpCC,EAAAA,EAAAA,MAAA,MAAAR,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAKM,EAAOG,UACZV,EAAAA,EAAAA,KAAA,WAAAC,SAAUM,EAAOI,YAFVH,EAGJ,OAKf,ECJMI,EACE,OADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WA+DZ,MA5DA,WACE,IAAAC,GAA4BC,EAAAA,EAAAA,UAASF,GAAYG,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAoCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzCf,EAAUgB,EAAA,GAAEC,EAAaD,EAAA,GAChCE,GAA0BR,EAAAA,EAAAA,UAAS,MAAKS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAAjCvB,EAAKwB,EAAA,GAAEC,EAAQD,EAAA,GAChBpB,GAASsB,EAAAA,EAAAA,MAEW,SAAAC,IAiBzB,OAjByBA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAA1B,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACyB,KAAnB/B,EAAOgC,QAAc,CAAAH,EAAAE,KAAA,eAAAF,EAAAI,OAAA,iBAK2B,OAL3BJ,EAAAC,KAAA,EAKvBI,QAAQC,IAAI,wKAAsCN,EAAAE,KAAA,EAE3BK,MAAM,GAADC,OACvBC,EAAAA,EAAQ,WAAAD,OAAUrC,EAAOgC,QAAO,YACnCO,EAAAA,GACA,KAAD,EAHa,OAARZ,EAAQE,EAAAW,KAAAX,EAAAE,KAAA,EAIQJ,EAASc,OAAO,KAAD,EAAxB,OAAPb,EAAOC,EAAAW,KAAAX,EAAAI,OAAA,SACNL,GAAO,cAAAC,EAAAC,KAAA,GAAAD,EAAAa,GAAAb,EAAA,SAER,IAAIc,MAAM,8GAAyB,KAAD,oBAAAd,EAAAe,OAAA,GAAAlB,EAAA,oBAE3CmB,MAAA,KAAAC,UAAA,CAgBD,OAdAC,EAAAA,EAAAA,YAAU,WACRhC,EAAUN,GAtBe,WAED,OAAAc,EAAAsB,MAAC,KAADC,UAAA,CAqBxBE,GACGC,MAAK,SAAAC,GACJhC,EAAcgC,GACdnC,EAAUN,EACZ,IACC0C,OAAM,SAAAvD,GACLyB,EAASzB,GACTmB,EAAUN,EACZ,GAEJ,GAAG,IAECK,IAAWL,GAEXZ,EAAAA,EAAAA,KAAAuD,EAAAA,SAAA,CAAAtD,SACGG,EAAWC,QAAQmD,QAAU,GAC5BxD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,8CAEHD,EAAAA,EAAAA,KAACyD,EAAU,CAACrD,WAAYA,MAM5Ba,IAAWL,GACNZ,EAAAA,EAAAA,KAAC0D,EAAAA,EAAM,IAGZzC,IAAWL,GACNZ,EAAAA,EAAAA,KAAC2D,EAAAA,EAAa,CAAC5D,MAAOA,SAD/B,CAGF,C,6EC1EA,IAAM0C,EAAW,+BAIXC,EAAU,CACdkB,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cANF,0P","sources":["components/Errors/ResponseError.jsx","components/Loader/Loader.jsx","components/Review/ReviewList/ReviewList.jsx","components/Review/Review.jsx","services/OptionsAPI.js"],"sourcesContent":["function ResponseError({ error }) {\n  return <p>{error.message}</p>;\n}\n\nexport default ResponseError;\n","function Loader(params) {\n  return <p>Завантажуєм фільми...</p>;\n}\n\nexport default Loader;\n","function ReviewList({ reviewData }) {\n  return (\n    <section>\n      <ul>\n        {reviewData.results.map((review, index) => (\n          <li key={index}>\n            <h1>{review.author}</h1>\n            <article>{review.content}</article>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nexport default ReviewList;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { BASE_URL, options } from 'services/OptionsAPI';\n\nimport Loader from 'components/Loader/Loader';\nimport ResponseError from 'components/Errors/ResponseError';\nimport ReviewList from './ReviewList/ReviewList';\n\nconst Status = {\n  IDLE: 'idle', //в режимі очікування\n  PENDING: 'pending', //очікується виконання\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nfunction Review() {\n  const [status, setStatus] = useState(Status.IDLE);\n  const [reviewData, setReviewData] = useState([]);\n  const [error, setError] = useState(null);\n  const params = useParams();\n\n  async function fetchReview() {\n    if (params.movieId === '') {\n      return;\n    }\n\n    try {\n      console.log(`Виконується фетч в компоненті Cast`);\n\n      const responce = await fetch(\n        `${BASE_URL}/movie/${params.movieId}/reviews`,\n        options\n      );\n      const revData = await responce.json();\n      return revData;\n    } catch (error) {\n      throw new Error('Упс щось пішло не так');\n    }\n  }\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n    fetchReview()\n      .then(data => {\n        setReviewData(data);\n        setStatus(Status.RESOLVED);\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n    // eslint-disable-next-line\n  }, []);\n\n  if (status === Status.RESOLVED) {\n    return (\n      <>\n        {reviewData.results.length <= 0 ? (\n          <p>We don't have any reviews for this movie</p>\n        ) : (\n          <ReviewList reviewData={reviewData} />\n        )}\n      </>\n    );\n  }\n\n  if (status === Status.PENDING) {\n    return <Loader />;\n  }\n\n  if (status === Status.RESOLVED) {\n    return <ResponseError error={error} />;\n  }\n}\n\nexport default Review;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkOWNhMTczNzkwZWQ5NzdkZGM3ZDgzYTA0NmQ3ZTIwMiIsIm5iZiI6MTczOTEyMTk4OS44NTIsInN1YiI6IjY3YThlNTQ1MDhkZmY5MDMxOGYxMTkwZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.K59AU-jgWUYBFO064D_SN_0Dl_uXHhDAAsm48CRTA0c';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: API_KEY,\n  },\n};\n\nexport { BASE_URL, options };\n"],"names":["_ref","error","_jsx","children","message","params","reviewData","results","map","review","index","_jsxs","author","content","Status","_useState","useState","_useState2","_slicedToArray","status","setStatus","_useState3","_useState4","setReviewData","_useState5","_useState6","setError","useParams","_fetchReview","_asyncToGenerator","_regeneratorRuntime","_callee","responce","revData","_context","prev","next","movieId","abrupt","console","log","fetch","concat","BASE_URL","options","sent","json","t0","Error","stop","apply","arguments","useEffect","fetchReview","then","data","catch","_Fragment","length","ReviewList","Loader","ResponseError","method","headers","accept","Authorization"],"sourceRoot":""}