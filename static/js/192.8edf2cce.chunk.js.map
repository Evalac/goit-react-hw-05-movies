{"version":3,"file":"static/js/192.8edf2cce.chunk.js","mappings":"gOAYMA,EACE,OA2CR,UArCA,SAAiBC,GACf,IAAAC,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAAwBL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA5BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA1BE,GAAFD,EAAA,GAAUA,EAAA,IACtBE,GAA4BZ,EAAAA,EAAAA,UAASH,GAAYgB,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAejD,OAfaC,EAAA,GAAWA,EAAA,IAExBC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAgB,+BAAD,GAAAC,OAAoCT,IAChDU,MAAK,SAAAC,GAEFd,EADEG,EAAO,EACO,SAAAY,GAAS,SAAAH,QAAAI,EAAAA,EAAAA,GAAQD,IAASC,EAAAA,EAAAA,GAAKF,EAAKG,SAAO,EAI7CH,EAAKG,QACvB,IACCC,OAAM,SAAAC,GAAK,OAAIZ,EAASY,EAAM,GACnC,GAAG,CAAChB,KAGFiB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAkB,CAACC,UAAW1B,EAAcK,QAASA,IACrDL,EAAa2B,OAAS,IAAKH,EAAAA,EAAAA,KAACI,EAAAA,EAAW,CAACvB,QAASA,MAaxD,C","sources":["pages/Popular.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport * as API from '../services/ApiFetchServise';\n// eslint-disable-next-line\nimport Loader from 'components/Loader/Loader'; // eslint-disable-next-line\nimport ResponseError from 'components/Errors/ResponseError';\nimport LoadMoreBtn from 'components/LoadMoreBtn/LoadMoreBtn';\n\nimport UniversalMovieList from 'components/UniversalMoviesList/UniversalMoviesList';\n\n// movie/popular?language=en-US&page=${page}\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nfunction Popular(params) {\n  const [popularMovie, setPopularMovie] = useState([]);\n  const [page, setPage] = useState(1); // eslint-disable-next-line\n  const [error, setError] = useState(null); // eslint-disable-next-line\n  const [status, setStatus] = useState(Status.IDLE);\n\n  useEffect(() => {\n    API.FetchMovies(`movie/popular?language=en-US`, `${page}`)\n      .then(data => {\n        if (page > 1) {\n          setPopularMovie(prevState => [...prevState, ...data.results]);\n          return;\n        }\n\n        setPopularMovie(data.results);\n      })\n      .catch(error => setError(error));\n  }, [page]);\n\n  return (\n    <>\n      <UniversalMovieList movieList={popularMovie} setPage={setPage} />\n      {popularMovie.length > 0 && <LoadMoreBtn setPage={setPage} />}\n    </>\n  );\n\n  // if (status === Status.PENDING) {\n  //   return <Loader />;\n  // }\n  // if (status === Status.RESOLVED) {\n  //   return <PopularMoviesList movieList={popularMovie} setPage={setPage} />;\n  // }\n  // if (status === Status.REJECTED) {\n  //   return <ResponseError error={error} />;\n  // }\n}\n\nexport default Popular;\n"],"names":["Status","params","_useState","useState","_useState2","_slicedToArray","popularMovie","setPopularMovie","_useState3","_useState4","page","setPage","_useState5","_useState6","setError","_useState7","_useState8","useEffect","API","concat","then","data","prevState","_toConsumableArray","results","catch","error","_jsxs","_Fragment","children","_jsx","UniversalMovieList","movieList","length","LoadMoreBtn"],"sourceRoot":""}