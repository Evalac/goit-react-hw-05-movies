{"version":3,"file":"static/js/828.84361c82.chunk.js","mappings":"gNAGMA,EACE,OADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WA+GZ,UA5GA,WAA0B,IAADC,EAAAC,EACvBC,GAA4BC,EAAAA,EAAAA,UAASJ,GAAYK,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAwCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAChBG,GAASC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAA2B,QAArBrB,EAAe,QAAfC,EAACiB,EAASI,aAAK,IAAArB,OAAA,EAAdA,EAAgBsB,YAAI,IAAAvB,EAAAA,EAAI,KAErDwB,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,2PAI0B,SAAAC,IAgB/B,OAhB+BA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAhC,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACyB,KAAnBrB,EAAOsB,QAAc,CAAAH,EAAAE,KAAA,eAAAF,EAAAI,OAAA,iBAImC,OAJnCJ,EAAAC,KAAA,EAIvBI,QAAQC,IAAI,gLAA8CN,EAAAE,KAAA,EAEnCK,MAAM,sCAADC,OACY3B,EAAOsB,QAAO,mBACpDd,GACA,KAAD,EAHa,OAARS,EAAQE,EAAAS,KAAAT,EAAAE,KAAA,EAIUJ,EAASY,OAAO,KAAD,EAAxB,OAATX,EAASC,EAAAS,KAAAT,EAAAI,OAAA,SACRL,GAAS,cAAAC,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,SAEV,IAAIY,MAAM,wHAA8B,KAAD,oBAAAZ,EAAAa,OAAA,GAAAhB,EAAA,oBAEhDiB,MAAA,KAAAC,UAAA,CAiBD,OAfAC,EAAAA,EAAAA,YAAU,WACR5C,EAAUR,GArBV,WAE8B,OAAA8B,EAAAoB,MAAC,KAADC,UAAA,CAoB9BE,GACGC,MAAK,SAAAnB,GACJvB,EAAgBuB,GAChB3B,EAAUR,GACVyC,QAAQC,IAAI/B,EACd,IACC4C,OAAM,SAAAxC,GACLC,EAASD,GACTP,EAAUR,EACZ,GAEJ,GAAG,IAECO,IAAWP,GACNwD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,4FAGRlD,IAAWP,GAEX0D,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAF,SAAA,EACED,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAIxC,EAAoByC,QAAQL,SAAC,wBACvCC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,WAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,OACEO,IAAG,kCAAAnB,OAAoCjC,EAAaqD,aACpDC,IAAI,cAIRP,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAAA,KAAAC,SAAI9C,EAAauD,WAEnBV,EAAAA,EAAAA,KAAA,MAAAC,UACEC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,yBAAuB9C,EAAawD,iBAEzCT,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,KAAAC,SAAG,cACHD,EAAAA,EAAAA,KAAA,KAAAC,SAAI9C,EAAayD,eAEnBV,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,UAED9C,EAAa0D,OAAOC,KAAI,SAAAD,GAAM,OAC7Bb,EAAAA,EAAAA,KAAA,KAAAC,SAAoBY,EAAOE,MAAnBF,EAAOG,GAAqB,cAK5ChB,EAAAA,EAAAA,KAAA,KAAAC,SAAG,4BACHD,EAAAA,EAAAA,KAAA,OAAAC,UACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAG,OAAMJ,SAAC,YAElBD,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAG,UAASJ,SAAC,oBAIzBD,EAAAA,EAAAA,KAACiB,EAAAA,GAAM,UAMXlE,IAAWP,GACNwD,EAAAA,EAAAA,KAAA,KAAAC,SAAI1C,EAAM2D,eADnB,CAGF,C","sources":["pages/MoviesDetails.jsx"],"sourcesContent":["import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useEffect, useRef, useState } from 'react';\n\nconst Status = {\n  IDLE: 'idle', //в режимі очікування\n  PENDING: 'pending', //очікується виконання\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nfunction MoviesDetails() {\n  const [status, setStatus] = useState(Status.IDLE);\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [error, setError] = useState(null);\n  const params = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkOWNhMTczNzkwZWQ5NzdkZGM3ZDgzYTA0NmQ3ZTIwMiIsIm5iZiI6MTczOTEyMTk4OS44NTIsInN1YiI6IjY3YThlNTQ1MDhkZmY5MDMxOGYxMTkwZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.K59AU-jgWUYBFO064D_SN_0Dl_uXHhDAAsm48CRTA0c',\n    },\n  };\n\n  async function fetchMovieDetails() {\n    if (params.movieId === '') {\n      return;\n    }\n    try {\n      console.log(`Виконується фетч в компоненті movieDetails`);\n\n      const responce = await fetch(\n        `https://api.themoviedb.org/3/movie/${params.movieId}?language=en-US`,\n        options\n      );\n      const movieInfo = await responce.json();\n      return movieInfo;\n    } catch (error) {\n      throw new Error('Упс, щось пішлот не так...');\n    }\n  }\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n    fetchMovieDetails()\n      .then(movieInfo => {\n        setMovieDetails(movieInfo);\n        setStatus(Status.RESOLVED);\n        console.log(movieDetails);\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n    // eslint-disable-next-line\n  }, []);\n\n  if (status === Status.PENDING) {\n    return <p>Завантажується...</p>;\n  }\n\n  if (status === Status.RESOLVED) {\n    return (\n      <>\n        <Link to={backLinkLocationRef.current}>Back to movie list</Link>\n        <main>\n          <section>\n            <div>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`}\n                alt=\"poster\"\n              />\n            </div>\n\n            <ul>\n              <li>\n                <p>{movieDetails.title}</p>\n              </li>\n              <li>\n                <p>User score/popularit: {movieDetails.popularity}</p>\n              </li>\n              <li>\n                <p>Overview</p>\n                <p>{movieDetails.overview}</p>\n              </li>\n              <li>\n                Geners:\n                {movieDetails.genres.map(genres => (\n                  <p key={genres.id}>{genres.name}</p>\n                ))}\n              </li>\n            </ul>\n          </section>\n          <p>Additional information</p>\n          <nav>\n            <ul>\n              <li>\n                <Link to=\"cast\">Cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">Reviews</Link>\n              </li>\n            </ul>\n          </nav>\n          <Outlet />\n        </main>\n      </>\n    );\n  }\n\n  if (status === Status.REJECTED) {\n    return <p>{error.message}</p>;\n  }\n}\n\nexport default MoviesDetails;\n"],"names":["Status","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","status","setStatus","_useState3","_useState4","movieDetails","setMovieDetails","_useState5","_useState6","error","setError","params","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","options","method","headers","accept","Authorization","_fetchMovieDetails","_asyncToGenerator","_regeneratorRuntime","_callee","responce","movieInfo","_context","prev","next","movieId","abrupt","console","log","fetch","concat","sent","json","t0","Error","stop","apply","arguments","useEffect","fetchMovieDetails","then","catch","_jsx","children","_jsxs","_Fragment","Link","to","current","src","poster_path","alt","title","popularity","overview","genres","map","name","id","Outlet","message"],"sourceRoot":""}