{"version":3,"file":"static/js/134.04689549.chunk.js","mappings":"gNA4EA,UAzEA,WAAmB,IAADA,EAChBC,GAA4BC,EAAAA,EAAAA,UAAS,CAAEC,QAAS,KAAKC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA9CK,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAwCC,EAAAA,EAAAA,IAAgB,IAAGC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAApDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAsC,QAA5Bb,EAAGW,EAAaG,IAAI,gBAAQ,IAAAd,EAAAA,EAAI,GAE1Ce,GAAYC,EAAAA,EAAAA,MAClBC,QAAQC,IAAIH,EAAUI,OAEtB,IAAMC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,2PAIyB,SAAAC,IAY9B,OAZ8BA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAA/B,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEkD,OAFlDF,EAAAC,KAAA,EAEIf,QAAQC,IAAI,yKAAkCa,EAAAE,KAAA,EACvBC,MAAM,mDAADC,OACyBtB,GACnDO,GACA,KAAD,EAC4B,OAJvBS,EAAQE,EAAAK,KAIRN,EAAOD,EAASQ,OAAMN,EAAAO,OAAA,SACrBR,GAAI,aAAAC,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAEL,IAAIS,MAAM,8GAAyB,KAAD,oBAAAT,EAAAU,OAAA,GAAAb,EAAA,mBAE3Cc,MAAA,KAAAC,UAAA,CAED,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,QACEG,SAAU,SAAAC,GACRA,EAAEC,iBACFhC,QAAQC,IAAIP,EAAaG,IAAI,UArBnC,WAE6B,OAAAW,EAAAiB,MAAC,KAADC,UAAA,CAoBvBO,GACGC,MAAK,SAAAC,GACJnC,QAAQC,IAAIkC,GACZ7C,EAAU6C,EACZ,IACCC,OAAM,SAAAC,GAAK,OAAIrC,QAAQC,IAAIoC,EAAM,GACtC,EAAER,SAAA,EAEFS,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,QAAOV,UACpBS,EAAAA,EAAAA,KAAA,SACEE,MAAO9C,EAAaG,IAAI,SACxB4C,SAAU,SAAAV,GACRpC,EAAgB,CAAE+C,MAAOX,EAAEY,OAAOH,OACpC,EACAI,KAAK,OACLC,KAAK,QACLC,GAAG,aAGPR,EAAAA,EAAAA,KAAA,UAAQM,KAAK,SAAQf,SAAC,eAExBS,EAAAA,EAAAA,KAAA,QAAAT,UACES,EAAAA,EAAAA,KAAA,MAAAT,SACGxC,EAAOH,QAAQ6D,KAAI,SAAAZ,GAAK,OACvBG,EAAAA,EAAAA,KAAA,MAAAT,UACES,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAE,GAAA/B,OAAKiB,EAAMW,IAAM5C,MAAO,CAAEgD,KAAMpD,GAAY+B,SACjDM,EAAMgB,SAFFhB,EAAMW,GAIV,UAMjB,C","sources":["pages/Movies.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\n\nfunction Movies() {\n  const [movies, setMovies] = useState({ results: [] });\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const queryValue = searchParams.get('query') ?? '';\n\n  const loacation = useLocation();\n  console.log(loacation.state);\n\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkOWNhMTczNzkwZWQ5NzdkZGM3ZDgzYTA0NmQ3ZTIwMiIsIm5iZiI6MTczOTEyMTk4OS44NTIsInN1YiI6IjY3YThlNTQ1MDhkZmY5MDMxOGYxMTkwZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.K59AU-jgWUYBFO064D_SN_0Dl_uXHhDAAsm48CRTA0c',\n    },\n  };\n\n  async function fetchSearchMovie() {\n    try {\n      console.log(`Виконується фетч пошуку фільму`);\n      const responce = await fetch(\n        `https://api.themoviedb.org/3/search/movie?query=${queryValue}`,\n        options\n      );\n      const data = responce.json();\n      return data;\n    } catch (error) {\n      throw new Error('Упс щось пішло не так');\n    }\n  }\n\n  return (\n    <>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          console.log(searchParams.get('query'));\n          fetchSearchMovie()\n            .then(movie => {\n              console.log(movie);\n              setMovies(movie);\n            })\n            .catch(error => console.log(error));\n        }}\n      >\n        <label htmlFor=\"query\">\n          <input\n            value={searchParams.get('query')}\n            onChange={e => {\n              setSearchParams({ query: e.target.value });\n            }}\n            type=\"text\"\n            name=\"query\"\n            id=\"query\"\n          />\n        </label>\n        <button type=\"submit\">Search</button>\n      </form>\n      <main>\n        <ul>\n          {movies.results.map(movie => (\n            <li key={movie.id}>\n              <Link to={`${movie.id}`} state={{ from: loacation }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </main>\n    </>\n  );\n}\n\nexport default Movies;\n"],"names":["_searchParams$get","_useState","useState","results","_useState2","_slicedToArray","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","queryValue","get","loacation","useLocation","console","log","state","options","method","headers","accept","Authorization","_fetchSearchMovie","_asyncToGenerator","_regeneratorRuntime","_callee","responce","data","_context","prev","next","fetch","concat","sent","json","abrupt","t0","Error","stop","apply","arguments","_jsxs","_Fragment","children","onSubmit","e","preventDefault","fetchSearchMovie","then","movie","catch","error","_jsx","htmlFor","value","onChange","query","target","type","name","id","map","Link","to","from","title"],"sourceRoot":""}