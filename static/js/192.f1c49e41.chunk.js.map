{"version":3,"file":"static/js/192.f1c49e41.chunk.js","mappings":"kOAUMA,EACE,OADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WAgDZ,UA7CA,WACE,IAAAC,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAAwBL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA5BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA4Bb,EAAAA,EAAAA,UAASF,GAAYgB,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA1CE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAkCjB,EAAAA,EAAAA,WAAS,GAAMkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAwB9B,OAtBAG,EAAAA,EAAAA,YAAU,WACRL,EAAUlB,GACVsB,GAAa,GACbE,EAAAA,EAAgB,+BAAD,GAAAC,OAAoChB,IAChDiB,MAAK,SAAAC,GACJ,GAAIlB,EAAO,EAIT,OAHAH,GAAgB,SAAAsB,GAAS,SAAAH,QAAAI,EAAAA,EAAAA,GAAQD,IAASC,EAAAA,EAAAA,GAAKF,EAAKG,SAAO,IAC3DZ,EAAUlB,QACVsB,GAAa,GAIfhB,EAAgBqB,EAAKG,SACrBZ,EAAUlB,GACVsB,GAAa,EACf,IACCS,OAAM,SAAAlB,GACLC,EAASD,GACTK,EAAUlB,EACZ,GACJ,GAAG,CAACS,IAEAQ,IAAWjB,GAA2B,IAATS,GACxBuB,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IAEZhB,IAAWjB,GACNgC,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAACrB,MAAOA,KAI7BsB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEL,EAAAA,EAAAA,KAACM,EAAAA,EAAkB,CAACC,UAAWlC,EAAcK,QAASA,IACrDW,IAAaW,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IACpB5B,EAAamC,OAAS,IAAKR,EAAAA,EAAAA,KAACS,EAAAA,EAAW,CAAC/B,QAASA,MAGxD,C","sources":["pages/Popular.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport * as API from '../services/ApiFetchServise';\n// eslint-disable-next-line\nimport Loader from 'components/Loader/Loader'; // eslint-disable-next-line\nimport ResponseError from 'components/Errors/ResponseError';\nimport LoadMoreBtn from 'components/LoadMoreBtn/LoadMoreBtn';\n\nimport UniversalMovieList from 'components/UniversalMoviesList/UniversalMoviesList';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nfunction Popular() {\n  const [popularMovie, setPopularMovie] = useState([]);\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n    setIsLoading(true);\n    API.FetchMovies(`movie/popular?language=en-US`, `${page}`)\n      .then(data => {\n        if (page > 1) {\n          setPopularMovie(prevState => [...prevState, ...data.results]);\n          setStatus(Status.RESOLVED);\n          setIsLoading(false);\n          return;\n        }\n\n        setPopularMovie(data.results);\n        setStatus(Status.RESOLVED);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  }, [page]);\n\n  if (status === Status.PENDING && page === 1) {\n    return <Loader />;\n  }\n  if (status === Status.REJECTED) {\n    return <ResponseError error={error} />;\n  }\n\n  return (\n    <>\n      <UniversalMovieList movieList={popularMovie} setPage={setPage} />\n      {isLoading && <Loader />}\n      {popularMovie.length > 0 && <LoadMoreBtn setPage={setPage} />}\n    </>\n  );\n}\n\nexport default Popular;\n"],"names":["Status","_useState","useState","_useState2","_slicedToArray","popularMovie","setPopularMovie","_useState3","_useState4","page","setPage","_useState5","_useState6","error","setError","_useState7","_useState8","status","setStatus","_useState9","_useState10","isLoading","setIsLoading","useEffect","API","concat","then","data","prevState","_toConsumableArray","results","catch","_jsx","Loader","ResponseError","_jsxs","_Fragment","children","UniversalMovieList","movieList","length","LoadMoreBtn"],"sourceRoot":""}