{"version":3,"file":"static/js/59.61f6bdf3.chunk.js","mappings":"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","sources":["components/MovieSearch/SearchMovieForm/SearchMovieForm.jsx","components/MovieSearch/SearchMovieList/SearchMovieList.jsx","pages/Movies.jsx","services/OptionsAPI.js"],"sourcesContent":["function SearchMovieForm({\n  searchParams,\n  fetchSearchMovie,\n  setMovies,\n  setSearchParams,\n}) {\n  const submitForm = e => {\n    e.preventDefault();\n    console.log(searchParams.get('query'));\n    fetchSearchMovie()\n      .then(movie => {\n        setMovies(movie);\n      })\n      .catch(error => console.log(error));\n  };\n\n  return (\n    <>\n      <form onSubmit={submitForm}>\n        <label htmlFor=\"query\">\n          <input\n            value={searchParams.get('query')}\n            onChange={e => {\n              setSearchParams({ query: e.target.value });\n            }}\n            type=\"text\"\n            name=\"query\"\n            id=\"query\"\n          />\n        </label>\n        <button type=\"submit\">Search</button>\n      </form>\n    </>\n  );\n}\n\nexport default SearchMovieForm;\n","import { Link } from 'react-router-dom';\n\nfunction SearchMovieList({ loacation, movies }) {\n  return (\n    <main>\n      <ul>\n        {movies.results.map(movie => (\n          <li key={movie.id}>\n            <Link to={`${movie.id}`} state={{ from: loacation }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </main>\n  );\n}\n\nexport default SearchMovieList;\n","import { useState } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\n\nimport { options, BASE_URL } from 'services/OptionsAPI';\n\nimport SearchMovieForm from 'components/MovieSearch/SearchMovieForm/SearchMovieForm';\nimport SearchMovieList from 'components/MovieSearch/SearchMovieList/SearchMovieList';\n\nfunction Movies() {\n  const [movies, setMovies] = useState({ results: [] });\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const queryValue = searchParams.get('query') ?? '';\n\n  const loacation = useLocation();\n\n  async function fetchSearchMovie() {\n    try {\n      console.log(`Виконується фетч пошуку фільму`);\n      const responce = await fetch(\n        `${BASE_URL}/search/movie?query=${queryValue}`,\n        options\n      );\n      const data = await responce.json();\n      return data;\n    } catch (error) {\n      throw new Error('Упс щось пішло не так');\n    }\n  }\n\n  return (\n    <>\n      <SearchMovieForm\n        searchParams={searchParams}\n        fetchSearchMovie={fetchSearchMovie}\n        setMovies={setMovies}\n        setSearchParams={setSearchParams}\n      />\n      <SearchMovieList loacation={loacation} movies={movies} />\n    </>\n  );\n}\n\nexport default Movies;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkOWNhMTczNzkwZWQ5NzdkZGM3ZDgzYTA0NmQ3ZTIwMiIsIm5iZiI6MTczOTEyMTk4OS44NTIsInN1YiI6IjY3YThlNTQ1MDhkZmY5MDMxOGYxMTkwZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.K59AU-jgWUYBFO064D_SN_0Dl_uXHhDAAsm48CRTA0c';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: API_KEY,\n  },\n};\n\nexport { BASE_URL, options };\n"],"names":["_ref","searchParams","fetchSearchMovie","setMovies","setSearchParams","_jsx","_Fragment","children","_jsxs","onSubmit","e","preventDefault","console","log","get","then","movie","catch","error","htmlFor","value","onChange","query","target","type","name","id","loacation","movies","results","map","Link","to","concat","state","from","title","_searchParams$get","_useState","useState","_useState2","_slicedToArray","_useSearchParams","useSearchParams","_useSearchParams2","queryValue","useLocation","_fetchSearchMovie","_asyncToGenerator","_regeneratorRuntime","_callee","responce","data","_context","prev","next","fetch","BASE_URL","options","sent","json","abrupt","t0","Error","stop","apply","arguments","SearchMovieForm","SearchMovieList","method","headers","accept","Authorization"],"sourceRoot":""}