{"version":3,"file":"static/js/345.dcb14618.chunk.js","mappings":"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","sources":["components/Errors/ResponseError.jsx","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/pages/Pages.module.css?6bb4","webpack://goit-react-hw-05-movies/./src/components/MovieDetailsCard/MovieDetailsCard.module.css?4584","components/MovieDetailsCard/MovieDetailsCard.jsx","pages/MoviesDetails.jsx","services/OptionsAPI.js"],"sourcesContent":["function ResponseError({ error }) {\n  return <p>{error.message}</p>;\n}\n\nexport default ResponseError;\n","import { ThreeDots } from 'react-loader-spinner';\n\nfunction Loader(params) {\n  return (\n    <ThreeDots\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      color=\"#4fa94d\"\n      radius=\"9\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n    />\n  );\n}\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"backLink\":\"Pages_backLink__m2oQZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"movie_deatils_card\":\"MovieDetailsCard_movie_deatils_card__FnOJb\",\"card_content_items\":\"MovieDetailsCard_card_content_items__dMF1U\",\"img_poster\":\"MovieDetailsCard_img_poster__iGVNU\",\"card_list_item\":\"MovieDetailsCard_card_list_item__zlY4C\",\"card_geners_list\":\"MovieDetailsCard_card_geners_list__9k3Uw\",\"additional_info_block\":\"MovieDetailsCard_additional_info_block__VYevi\",\"card_geners_list_item\":\"MovieDetailsCard_card_geners_list_item__G6KYp\",\"card_link\":\"MovieDetailsCard_card_link__AswU7\"};","import { Link } from 'react-router-dom';\n\nimport css from './MovieDetailsCard.module.css';\nimport { useState, useEffect } from 'react';\n\nfunction MovieDeatilsCard({ movieDetails }) {\n  let moviesArr = [];\n\n  const [watchlist, setWatchlist] = useState(\n    JSON.parse(localStorage.getItem('watchlist')) ?? []\n  );\n\n  const findMovie = watchlist.some(movie => movie.id === movieDetails.id);\n\n  const addMovie = () => {\n    if (findMovie) {\n      alert('Такий фільм вже є в списку');\n      return;\n    }\n    moviesArr.push(movieDetails);\n    setWatchlist(prevState => [...prevState, ...moviesArr]);\n  };\n\n  const removeMovie = () => {\n    console.log(`click`);\n    const updatedWatchList = watchlist.filter(\n      movie => movie.id !== movieDetails.id\n    );\n    setWatchlist(updatedWatchList);\n    localStorage.setItem('watchlist', JSON.stringify(updatedWatchList));\n  };\n\n  useEffect(() => {\n    localStorage.setItem('watchlist', JSON.stringify(watchlist));\n  }, [watchlist]);\n\n  return (\n    <>\n      <section className={css.movie_deatils_card}>\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`}\n            className={css.img_poster}\n            alt=\"...\"\n          />\n        </div>\n\n        <div className={css.card_content_items}>\n          <ul className={css.card_list}>\n            <li className={css.card_list_item}>\n              <h2 className={css.title}>{movieDetails.title}</h2>\n              <p>{movieDetails.overview}</p>\n            </li>\n            <li>\n              <p> Release: {movieDetails.release_date}</p>\n            </li>\n            <li>\n              <p> User score: {movieDetails.vote_average}</p>\n            </li>\n            <li>Runtime: {movieDetails.runtime} min</li>\n          </ul>\n\n          <ul className={css.card_geners_list}>\n            <li className={css.card_geners_list_item}>\n              <p>\n                Genres:{' '}\n                {movieDetails.genres.map(genre => genre.name).join(', ')}.\n              </p>\n            </li>\n          </ul>\n\n          <div className={css.additional_info_block}>\n            <p>Additional information:</p>\n            <Link to=\"cast\" className={css.card_link}>\n              Cast\n            </Link>\n            <Link to=\"reviews\" className={css.card_link}>\n              Reviews\n            </Link>\n            <button onClick={addMovie} disabled={findMovie}>\n              Add to watchlist\n            </button>\n            <button onClick={removeMovie} disabled={!findMovie}>\n              Remove\n            </button>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default MovieDeatilsCard;\n","import css from './Pages.module.css';\n\nimport { NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useEffect, useRef, useState } from 'react';\nimport { options, BASE_URL } from 'services/OptionsAPI';\n\nimport Loader from 'components/Loader/Loader';\nimport ResponseError from 'components/Errors/ResponseError';\nimport MovieDeatilsCard from 'components/MovieDetailsCard/MovieDetailsCard';\n\nconst Status = {\n  IDLE: 'idle', //в режимі очікування\n  PENDING: 'pending', //очікується виконання\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nfunction MoviesDetails() {\n  const [status, setStatus] = useState(Status.IDLE);\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [error, setError] = useState(null);\n  const params = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  async function fetchMovieDetails() {\n    if (params.movieId === '') {\n      return;\n    }\n    try {\n      console.log(`Виконується фетч в компоненті movieDetails`);\n\n      const responce = await fetch(\n        `${BASE_URL}/movie/${params.movieId}?language=en-US`,\n        options\n      );\n      const movieInfo = await responce.json();\n      return movieInfo;\n    } catch (error) {\n      throw new Error('Упс, щось пішлот не так...');\n    }\n  }\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n    fetchMovieDetails()\n      .then(movieInfo => {\n        setMovieDetails(movieInfo);\n        setStatus(Status.RESOLVED);\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n    // eslint-disable-next-line\n  }, []);\n\n  if (status === Status.PENDING) {\n    return <Loader />;\n  }\n\n  if (status === Status.RESOLVED) {\n    return (\n      <>\n        <NavLink className={css.backLink} to={backLinkLocationRef.current}>\n          Back to movie list\n        </NavLink>\n        <MovieDeatilsCard movieDetails={movieDetails} />\n        <Outlet />\n      </>\n    );\n  }\n\n  if (status === Status.REJECTED) {\n    return <ResponseError error={error} />;\n  }\n}\n\nexport default MoviesDetails;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkOWNhMTczNzkwZWQ5NzdkZGM3ZDgzYTA0NmQ3ZTIwMiIsIm5iZiI6MTczOTEyMTk4OS44NTIsInN1YiI6IjY3YThlNTQ1MDhkZmY5MDMxOGYxMTkwZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.K59AU-jgWUYBFO064D_SN_0Dl_uXHhDAAsm48CRTA0c';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: API_KEY,\n  },\n};\n\nexport { BASE_URL, options };\n"],"names":["_ref","error","_jsx","children","message","params","ThreeDots","visible","height","width","color","radius","ariaLabel","wrapperStyle","wrapperClass","_JSON$parse","movieDetails","moviesArr","_useState","useState","JSON","parse","localStorage","getItem","_useState2","_slicedToArray","watchlist","setWatchlist","findMovie","some","movie","id","useEffect","setItem","stringify","_Fragment","_jsxs","className","css","src","concat","poster_path","alt","title","overview","release_date","vote_average","runtime","genres","map","genre","name","join","Link","to","onClick","alert","push","prevState","_toConsumableArray","disabled","console","log","updatedWatchList","filter","Status","_location$state$from","_location$state","status","setStatus","_useState3","_useState4","setMovieDetails","_useState5","_useState6","setError","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","_fetchMovieDetails","_asyncToGenerator","_regeneratorRuntime","_callee","responce","movieInfo","_context","prev","next","movieId","abrupt","fetch","BASE_URL","options","sent","json","t0","Error","stop","apply","arguments","fetchMovieDetails","then","catch","Loader","NavLink","current","MovieDeatilsCard","Outlet","ResponseError","method","headers","accept","Authorization"],"sourceRoot":""}